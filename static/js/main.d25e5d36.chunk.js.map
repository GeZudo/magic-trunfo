{"version":3,"sources":["components/Card.jsx","components/Input.jsx","components/Select.jsx","components/Form.jsx","components/FilterSelect.jsx","components/FilterForm.jsx","App.js","index.js"],"names":["Card","this","props","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","className","replace","src","alt","React","Component","Imput","name","value","formType","labelText","testid","onChange","htmlFor","id","type","checked","placeholder","Select","Form","hasTrunfo","isSaveButtonDisabled","onInputChange","onSaveButtonClick","Input","disabled","onClick","FilterSelect","FilterForm","filterName","filterRare","filterTrunfo","initialState","App","handleDelete","trunfo","deck","state","setState","anterior","filter","carta","handleSave","estado","handleChange","target","handleButon","strng","verificaNumber","attr1","Number","attr2","attr3","liberado","filterCards","includes","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d25e5d36.chunk.js","sourcesContent":["import React from 'react';\nimport PropType from 'prop-types';\n\nclass Card extends React.Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    } = this.props;\n    return (\n      <div className=\"cardbg\">\n        <div className={ cardRare.replace(/\\s/g, '') }>\n          <p className=\"nameCard\">{ cardName }</p>\n          { cardImage && <img src={ cardImage } alt={ cardName } className=\"image-card\" />}\n          { cardName && <p className=\"cardRare\">{ cardRare }</p> }\n          { cardTrunfo && <p className=\"trunfo-card\">Super Trunfo</p>}\n          <p className=\"description-card\">{ cardDescription }</p>\n          { cardName && <div className=\"attrContainer\">\n            <p className=\"attrCard\">\n              Atributo 1:\n              {' '}\n              { cardAttr1 }\n              {' '}\n            </p>\n            <p className=\"attrCard\">\n              Atributo 2:\n              {' '}\n              { cardAttr2 }\n              {' '}\n            </p>\n            <p className=\"attrCard\">\n              Atributo 3:\n              {' '}\n              { cardAttr3 }\n              {' '}\n            </p>\n          </div> }\n        </div>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  cardName: PropType.string.isRequired,\n  cardDescription: PropType.string.isRequired,\n  cardAttr1: PropType.string.isRequired,\n  cardAttr2: PropType.string.isRequired,\n  cardAttr3: PropType.string.isRequired,\n  cardImage: PropType.string.isRequired,\n  cardRare: PropType.string.isRequired,\n  cardTrunfo: PropType.bool.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropType from 'prop-types';\n\nclass Imput extends React.Component {\n  render() {\n    const { name, value, formType, labelText, testid, onChange } = this.props;\n    return (\n      <div className={ testid }>\n        {formType === 'checkbox' ? (\n          <div className=\"checked\">\n            <label htmlFor={ labelText }>\n              <span>{ labelText }</span>\n              <input\n                id={ labelText }\n                type={ formType }\n                name={ name }\n                className={ testid }\n                onChange={ onChange }\n                checked={ value }\n              />\n            </label>\n          </div>\n        )\n          : (\n            <label htmlFor={ labelText }>\n              <span>{ labelText }</span>\n              <input\n                id={ labelText }\n                type={ formType }\n                name={ name }\n                placeholder={ labelText }\n                className={ testid }\n                onChange={ onChange }\n                value={ value }\n              />\n            </label>)}\n      </div>\n    );\n  }\n}\n\nImput.propTypes = {\n  name: PropType.string.isRequired,\n  value: PropType.string.isRequired,\n  formType: PropType.string.isRequired,\n  labelText: PropType.string.isRequired,\n  testid: PropType.string.isRequired,\n  onChange: PropType.func.isRequired,\n};\n\nexport default Imput;\n","import React from 'react';\nimport PropType from 'prop-types';\n\nclass Select extends React.Component {\n  render() {\n    const { name, formType, labelText, testid, value, onChange } = this.props;\n    return (\n      <label htmlFor={ labelText }>\n        { labelText }\n        <select\n          id={ labelText }\n          type={ formType }\n          data-testid={ testid }\n          name={ name }\n          onChange={ onChange }\n          value={ value }\n        >\n          <option value=\"normal\">Normal</option>\n          <option value=\"raro\">Raro</option>\n          <option value=\"muito raro\">Muito Raro</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nSelect.propTypes = {\n  name: PropType.string.isRequired,\n  formType: PropType.string.isRequired,\n  labelText: PropType.string.isRequired,\n  testid: PropType.string.isRequired,\n  value: PropType.string.isRequired,\n  onChange: PropType.func.isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropType from 'prop-types';\nimport Input from './Input';\nimport Select from './Select';\n\nclass Form extends React.Component {\n  // constructor() {\n  //   super();\n\n  // }\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled,\n      onInputChange,\n      onSaveButtonClick,\n    } = this.props;\n\n    return (\n      <div className=\"inputs\">\n        <Input\n          formType=\"text\"\n          labelText=\"Nome\"\n          testid=\"name-input\"\n          name=\"cardName\"\n          value={ cardName }\n          onChange={ onInputChange }\n        />\n        <Input\n          formType=\"textarea\"\n          labelText=\"Descrição\"\n          testid=\"description-input\"\n          name=\"cardDescription\"\n          value={ cardDescription }\n          onChange={ onInputChange }\n        />\n        <Input\n          formType=\"number\"\n          labelText=\"Atributo 1:\"\n          testid=\"attr1-input\"\n          name=\"cardAttr1\"\n          value={ cardAttr1 }\n          onChange={ onInputChange }\n        />\n        <Input\n          formType=\"number\"\n          labelText=\"Atributo 2:\"\n          testid=\"attr2-input\"\n          name=\"cardAttr2\"\n          value={ cardAttr2 }\n          onChange={ onInputChange }\n        />\n        <Input\n          formType=\"number\"\n          labelText=\"Atributo 3:\"\n          testid=\"attr3-input\"\n          name=\"cardAttr3\"\n          value={ cardAttr3 }\n          onChange={ onInputChange }\n        />\n        <Input\n          formType=\"text\"\n          labelText=\"Imagem\"\n          testid=\"image-input\"\n          name=\"cardImage\"\n          value={ cardImage }\n          onChange={ onInputChange }\n        />\n        <Select\n          labelText=\"Raridade\"\n          testid=\"rare-input\"\n          formType=\"select\"\n          name=\"cardRare\"\n          value={ cardRare }\n          onChange={ onInputChange }\n        />\n        {\n          hasTrunfo ? <p>Você já tem um Super Trunfo em seu baralho</p> : <Input\n            formType=\"checkbox\"\n            labelText=\"Super Trunfo\"\n            testid=\"trunfo-input\"\n            name=\"cardTrunfo\"\n            value={ cardTrunfo }\n            onChange={ onInputChange }\n          />\n        }\n        <button\n          data-testid=\"save-button\"\n          type=\"submit\"\n          disabled={ isSaveButtonDisabled }\n          onClick={ onSaveButtonClick }\n        >\n          Salvar\n        </button>\n      </div>\n    );\n  }\n}\nForm.propTypes = {\n  cardName: PropType.string.isRequired,\n  cardDescription: PropType.string.isRequired,\n  cardAttr1: PropType.string.isRequired,\n  cardAttr2: PropType.string.isRequired,\n  cardAttr3: PropType.string.isRequired,\n  cardImage: PropType.string.isRequired,\n  cardRare: PropType.string.isRequired,\n  cardTrunfo: PropType.bool.isRequired,\n  hasTrunfo: PropType.bool.isRequired,\n  isSaveButtonDisabled: PropType.bool.isRequired,\n  onInputChange: PropType.func.isRequired,\n  onSaveButtonClick: PropType.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropType from 'prop-types';\n\nclass FilterSelect extends React.Component {\n  render() {\n    const { name, formType, labelText, testid, value, onChange } = this.props;\n    return (\n      <div className={ testid }>\n        <label htmlFor={ labelText }>\n          { labelText }\n          <select\n            id={ labelText }\n            type={ formType }\n            data-testid={ testid }\n            name={ name }\n            onChange={ onChange }\n            value={ value }\n          >\n            <option value=\"todas\">Todas</option>\n            <option value=\"normal\">Normal</option>\n            <option value=\"raro\">Raro</option>\n            <option value=\"muito raro\">Muito Raro</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n}\n\nFilterSelect.propTypes = {\n  name: PropType.string.isRequired,\n  formType: PropType.string.isRequired,\n  labelText: PropType.string.isRequired,\n  testid: PropType.string.isRequired,\n  value: PropType.string.isRequired,\n  onChange: PropType.func.isRequired,\n};\n\nexport default FilterSelect;\n","import React from 'react';\nimport PropType from 'prop-types';\nimport Input from './Input';\nimport FilterSelect from './FilterSelect';\n\nclass FilterForm extends React.Component {\n  render() {\n    const {\n      onInputChange,\n      filterName,\n      filterRare,\n      filterTrunfo,\n    } = this.props;\n\n    return (\n      <div className=\"inputFilter\">\n        <Input\n          formType=\"text\"\n          labelText=\"Filtro de Busca\"\n          testid=\"name-filter\"\n          name=\"filterName\"\n          value={ filterName }\n          onChange={ onInputChange }\n        />\n        <FilterSelect\n          labelText=\"Raridade\"\n          testid=\"rare-filter\"\n          formType=\"select\"\n          name=\"filterRare\"\n          value={ filterRare }\n          onChange={ onInputChange }\n        />\n        <Input\n          formType=\"checkbox\"\n          labelText=\"Super Trunfo\"\n          testid=\"trunfo-filter\"\n          name=\"filterTrunfo\"\n          value={ filterTrunfo }\n          onChange={ onInputChange }\n        />\n      </div>\n    );\n  }\n}\n\nFilterForm.propTypes = {\n  onInputChange: PropType.string.isRequired,\n  filterName: PropType.string.isRequired,\n  filterRare: PropType.string.isRequired,\n  filterTrunfo: PropType.bool.isRequired,\n};\n\nexport default FilterForm;\n","import React from 'react';\nimport Card from './components/Card';\nimport Form from './components/Form';\nimport FilterForm from './components/FilterForm';\nimport './App.css';\n\nconst initialState = {\n  cardName: '',\n  cardDescription: '',\n  cardAttr1: 0,\n  cardAttr2: 0,\n  cardAttr3: 0,\n  cardImage: '',\n  cardRare: 'normal',\n  cardTrunfo: false,\n  isSaveButtonDisabled: true,\n  filterName: '',\n  filterRare: 'todas',\n  filterTrunfo: false,\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ...initialState,\n      hasTrunfo: false,\n      deck: [],\n      onInputChange: this.handleChange,\n      onSaveButtonClick: this.handleSave,\n    };\n  }\n\n  handleDelete = (name, trunfo) => {\n    const { deck } = this.state;\n    this.setState((anterior) => ({\n      deck: deck.filter((carta) => carta.cardName !== name),\n      hasTrunfo: trunfo ? false : anterior.hasTrunfo,\n    }));\n  }\n\n  handleSave = () => {\n    const { hasTrunfo, deck, ...estado } = this.state;\n    this.setState((anterior) => ({\n      deck: [...anterior.deck, estado],\n      hasTrunfo: estado.cardTrunfo ? true : hasTrunfo,\n      ...initialState,\n    }));\n  }\n\n  handleChange = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    }, this.handleButon);\n  }\n\n  handleButon = () => {\n    const {\n      cardName,\n      cardDescription,\n      cardImage,\n      cardRare,\n    } = this.state;\n    const num = this.verificaNumber();\n    let strng = false;\n    if (cardName && cardDescription && cardImage && cardRare) strng = true;\n    if (num && strng) {\n      this.setState({ isSaveButtonDisabled: false });\n    } else this.setState({ isSaveButtonDisabled: true });\n  }\n\n  verificaNumber = () => {\n    const {\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n    } = this.state;\n\n    const attr1 = Number(cardAttr1);\n    const attr2 = Number(cardAttr2);\n    const attr3 = Number(cardAttr3);\n    const maxAttr = 90;\n    const maxSum = 210;\n    let liberado = true;\n\n    if (attr1 + attr2 + attr3 > maxSum) liberado = false;\n    if (attr1 > maxAttr) liberado = false;\n    if (attr2 > maxAttr) liberado = false;\n    if (attr3 > maxAttr) liberado = false;\n    if (attr1 < 0) liberado = false;\n    if (attr2 < 0) liberado = false;\n    if (attr3 < 0) liberado = false;\n    return liberado;\n  }\n\n  filterCards = () => {\n    const {\n      filterName,\n      filterRare,\n      filterTrunfo,\n      deck,\n    } = this.state;\n\n    if (filterTrunfo !== false) {\n      return deck.filter((carta) => carta.cardTrunfo === true);\n    }\n    if (filterName !== '') {\n      return deck.filter((carta) => carta.cardName.includes(filterName));\n    }\n    if (filterRare !== 'todas') {\n      return deck.filter((carta) => carta.cardRare === filterRare);\n    }\n    return deck;\n  }\n\n  render() {\n    return (\n      <div>\n        <header><h1> MagicTrunfo </h1></header>\n        <div className=\"inputPreviewContainer\">\n          <div className=\"inputContainer\">\n            <h2>Adicionar nova  carta</h2>\n            <Form { ...this.state } />\n          </div>\n          <div className=\"previewContainer\">\n            <Card { ...this.state } />\n          </div>\n        </div>\n        <h2 className=\"header2\">Seu Deck</h2>\n        <div className=\"filtro\">\n          <FilterForm { ...this.state } />\n          <div className=\"deckSalvo\">\n            {this.filterCards().map((carta) => (\n              <div key={ carta.cardName } className=\"cartinha1\">\n                <div className=\"cartinha2\">\n                  <Card key={ carta.cardName } { ...carta } />\n                </div>\n                <button\n                  data-testid=\"delete-button\"\n                  type=\"button\"\n                  onClick={ () => this.handleDelete(carta.cardName, carta.cardTrunfo) }\n                >\n                  Excluir\n                </button>\n              </div>))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}